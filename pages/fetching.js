import Head from "next/head";
import { useState } from "react";
import {
  Flex,
  Stack,
  Heading,
  Button,
  Avatar,
  SkeletonText,
  Spinner,
  Text,
  StackDivider,
} from "@chakra-ui/react";

// components
import Navbar from "../components/Navbar";

const Fetching = () => {
  const [dataFromAPI, setDataFromAPI] = useState(null);
  const [onLoading, setOnLoading] = useState(false);

  const fetchUser = () => {
    setOnLoading(true);
    fetch("https://randomuser.me/api")
      .then((res) => res.json())
      .then((data) => {
        setDataFromAPI(data.results);
        setOnLoading(false);
      });
  };

  return (
    <>
      <Head>
        <title>Internship Program | User Fetcher</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <Flex
        w="100%"
        direction="column"
        minHeight="100vh"
        alignItems="center"
        justifyContent="center"
      >
        <Stack
          direction="column"
          justifyContent="center"
          spacing={8}
          w="270px"
          divider={<StackDivider borderColor="gray.200" />}
        >
          <Heading textAlign="center">User Fetcher</Heading>
          <Stack py={6}>
            {dataFromAPI ? (
              <>
                {dataFromAPI.map((user, idx) => {
                  return (
                    <Stack
                      maxW="500px"
                      h="300px"
                      w="270px"
                      boxShadow="2xl"
                      alignItems="center"
                      justifyContent="center"
                      border="1px"
                      borderRadius="md"
                      borderColor={
                        user.gender === "female" ? "pink.100" : "blue.100"
                      }
                      key={idx}
                    >
                      <Stack p="2em" spacing={5}>
                        <Avatar size="xl" mx="auto" src={user.picture.medium} />
                        <Stack direction="column">
                          <Heading
                            textAlign="center"
                            size="18px"
                            fontWeight="500"
                          >
                            {user.name.first} {user.name.last}
                          </Heading>
                          <Text
                            textAlign="center"
                            fontSize="16px"
                            color="gray.500"
                            whiteSpace="nowrap"
                          >
                            {user.email}
                          </Text>
                        </Stack>
                        <Stack
                          direction="row"
                          justifyContent="center"
                          spacing={6}
                        >
                          <Stack alignItems="center" spacing="0" w="85px">
                            <Text fontWeight="600">{user.nat}</Text>
                            <Text fontSize="sm" color="gray.500">
                              Nationality
                            </Text>
                          </Stack>
                          <Stack
                            alignItems="center"
                            spacing="0"
                            w="85px"
                            pb="1px"
                          >
                            <Text fontWeight="600">{user.dob.age}</Text>
                            <Text fontSize="sm" color="gray.500">
                              Age
                            </Text>
                          </Stack>
                        </Stack>
                      </Stack>
                    </Stack>
                  );
                })}
              </>
            ) : (
              <Stack boxShadow="2xl" p="2em" spacing={5}>
                <Avatar size="xl" mx="auto" />
                <SkeletonText noOfLines={8} />
              </Stack>
            )}
          </Stack>
          <Button onClick={fetchUser} disabled={onLoading}>
            {onLoading ? (
              <Spinner />
            ) : dataFromAPI ? (
              "Refetch User"
            ) : (
              "Fetch User"
            )}
          </Button>
        </Stack>
      </Flex>
    </>
  );
};

export default Fetching;
